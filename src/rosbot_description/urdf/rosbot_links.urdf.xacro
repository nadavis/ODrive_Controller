<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- include inertia calculation macros -->
  <xacro:include filename="$(find rosbot_description)/urdf/inertia.urdf.xacro" />

  <xacro:macro name="rosbot_links" params="prefix">

    <!-- body properties -->
    <xacro:property name="body_mass" value="6.0" />
    <xacro:property name="body_width" value="0.46" />
    <xacro:property name="body_length" value="0.3" />
    <xacro:property name="body_height" value="0.17" />
    <xacro:property name="body_ground_offset" value="0.0575" />

    <!-- lidar properties -->
    <xacro:property name="lidar_height" value="0.055" />
    <xacro:property name="lidar_radius" value="0.0275" />

    <!-- rear wheel properties -->
    <xacro:property name="rear_wheel_mass" value="0.5" />
    <xacro:property name="rear_wheel_width" value="0.05" />
    <xacro:property name="rear_wheel_radius" value="0.0975" />
    <xacro:property name="rear_wheel_origin_x" value="-0.1" />
    <xacro:property name="rear_wheel_distance" value="0.241" />

    <!-- front caster wheel properties -->
    <xacro:property name="front_wheel_mass" value="0.2" />
    <xacro:property name="front_wheel_width" value="0.025" />
    <xacro:property name="front_wheel_radius" value="0.0385" />
    <xacro:property name="front_wheel_origin_x" value="0.26757" />

    <!-- imu properties -->
    <xacro:property name="imu_size" value="0.02" />

    <!-- camera properties -->
    <xacro:property name="camera_width" value="0.025" />
    <xacro:property name="camera_length" value="0.05" />
    <xacro:property name="camera_height" value="0.025" />

    <!-- PHYSICAL ROBOT MEASUREMENTS -->
    <!-- robot is 300mm wide, 460mm long, 170mm tall -->
    <!-- front wheels are 38.5mm off the ground surface -->
    <!-- robot body is 57.5mm off the ground surface -->
    <!-- robot rear wheel diameter is 195mm (radius 97.5mm) -->
    <!-- robot rear wheels axis is 97.5mm off the ground surface -->
    <!-- robot rear wheels axis is 100mm from the center of the body -->
    <!-- front wheel diameter 77mm (radius 38.5mm)  -->
    <!-- robot front wheels axis is -267.57mm from the center of the body -->
    <!-- small motor pulley has 16 teeth -->
    <!-- large wheel pulley has 72 teeth -->
    <!-- motor to wheel gear ratio is 72/16 = 4.5 -->

    <!-- base link and footprint -->
    <link name="${prefix}base_link"/>

    <!-- center of the robot projected on the ground, used for navigation calculation -->
    <link name="base_footprint"/>
    <joint name="${prefix}base_joint" type="fixed">
      <parent link="${prefix}base_link"/>
      <child link="${prefix}base_footprint" />
      <origin xyz="${rear_wheel_origin_x * -1} 0 0" rpy="0 0 0"/>
    </joint>

    <!-- body -->
    <link name="${prefix}body">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${body_width} ${body_length} ${body_height}"/>
          <!-- TODO replace simple box with robot mesh -->
          <!-- <mesh filename="package://rosbot_description/meshes/rosbot_body.stl" scale="0.001 0.001 0.001"/> -->
        </geometry>
        <material name="orange"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${body_width} ${body_length} ${body_height}"/>
        </geometry>
      </collision>
      <xacro:box_inertia m="${body_mass}" w="${body_width}" d="${body_length}" h="${body_height}"/>
    </link>
    <joint name="${prefix}body_joint" type="fixed">
      <parent link="${prefix}base_link"/>
      <child link="${prefix}body"/>
      <origin xyz="${-rear_wheel_origin_x} 0 ${body_ground_offset + body_height / 2}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>

    <!-- left wheel -->
    <link name="${prefix}left_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder length="${rear_wheel_width}" radius="${rear_wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder length="${rear_wheel_width}" radius="${rear_wheel_radius}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="${rear_wheel_mass}" r="${rear_wheel_radius}" h="${rear_wheel_width}"/>
    </link>
    <joint name="${prefix}left_wheel_joint" type="continuous">
      <parent link="${prefix}base_link"/>
      <child link="${prefix}left_wheel"/>
      <origin xyz="0 ${rear_wheel_distance/2} ${rear_wheel_radius}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="0.2"/>
    </joint>

    <!-- right wheel -->
    <link name="${prefix}right_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder length="${rear_wheel_width}" radius="${rear_wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder length="${rear_wheel_width}" radius="${rear_wheel_radius}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="${rear_wheel_mass}" r="${rear_wheel_radius}" h="${rear_wheel_width}"/>
    </link>
    <joint name="${prefix}right_wheel_joint" type="continuous">
      <parent link="${prefix}base_link"/>
      <child link="${prefix}right_wheel"/>
      <origin xyz="0 -${rear_wheel_distance/2} ${rear_wheel_radius}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="0.2"/>
    </joint>

    <!-- front caster wheel -->
    <link name="${prefix}front_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${front_wheel_radius}"/>
        </geometry>
        <material name="white"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${front_wheel_radius}"/>
        </geometry>
      </collision>
      <xacro:sphere_inertia m="${front_wheel_mass}" r="${front_wheel_radius}"/>
    </link>
    <joint name="${prefix}front_wheel_joint" type="fixed">
      <parent link="${prefix}body"/>
      <child link="${prefix}front_wheel"/>
      <origin xyz="${front_wheel_origin_x} 0 ${front_wheel_radius - body_height / 2 - body_ground_offset}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <dynamics damping="0.2"/>
    </joint>

    <!-- lidar -->
    <link name="${prefix}base_laser">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${lidar_height}" radius="${lidar_radius}"/>
        </geometry>
        <material name="green"/>
      </visual>
    </link>
    <joint name="${prefix}lidar_joint" type="fixed">
      <parent link="${prefix}body"/>
      <child link="${prefix}base_laser"/>
      <origin xyz="0 0 ${body_height / 2 + lidar_height / 2}" rpy="0 0 ${pi}"/>
      <axis xyz="0 0 1"/>
    </joint>

    <!-- imu -->
    <link name="imu_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${imu_size}" radius="${imu_size}"/>
        </geometry>
        <material name="red"/>
      </visual>
      <collision>
        <geometry>
          <box size="${imu_size} ${imu_size} ${imu_size}"/>
          <cylinder length="${imu_size}" radius="${imu_size / 2}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="0.01" r="${imu_size}" h="${imu_size}"/>
    </link>
    <joint name="imu_joint" type="fixed">
      <parent link="body"/>
      <child link="imu_link"/>
      <origin xyz="${rear_wheel_origin_x} 0 ${body_height / 2 + imu_size / 2}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
    </joint>

    <!-- rgb camera -->
    <link name="${prefix}rgb_camera_link">
      <visual>
        <origin xyz="${-camera_width / 2} 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${camera_width} ${camera_length} ${camera_height}"/>
        </geometry>
        <material name="white"/>
      </visual>
    </link>
    <joint name="${prefix}camera_joint" type="fixed">
      <parent link="${prefix}body"/>
      <child link="${prefix}rgb_camera_link"/>
      <origin xyz="${body_width / 2} 0 ${body_height / 2 + camera_height / 2}" rpy="0 0 0"/>
    </joint>

    <!-- depth camera -->
    <link name="depth_camera_link"/>
    <joint name="depth_camera_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${pi/2}"/>
      <parent link="rgb_camera_link"/>
      <child link="depth_camera_link"/>
    </joint>

  </xacro:macro>

</robot>